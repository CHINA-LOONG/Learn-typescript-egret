var __reflect=this&&this.__reflect||function(e,t,n){e.__class__=t,n?n.push(t):n=[t],e.__types__=e.__types__?n.concat(e.__types__):n},__awaiter=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))(function(i,s){function r(e){try{l(a.next(e))}catch(e){s(e)}}function o(e){try{l(a.throw(e))}catch(e){s(e)}}function l(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(r,o)}l((a=a.apply(e,t||[])).next())})};class AssetAdapter{getAsset(e,t,n){function a(a){t.call(n,a,e)}if(RES.hasRes(e)){let t=RES.getRes(e);t?a(t):RES.getResAsync(e,a,this)}else RES.getResByUrl(e,a,this,RES.ResourceItem.TYPE_IMAGE)}}__reflect(AssetAdapter.prototype,"AssetAdapter",["eui.IAssetAdapter"]);class LoadingUI extends egret.Sprite{constructor(){super(),this.createView()}createView(){this.textField=new egret.TextField,this.addChild(this.textField),this.textField.y=300,this.textField.width=480,this.textField.height=100,this.textField.textAlign="center"}onProgress(e,t){this.textField.text=`Loading...${e}/${t}`}}__reflect(LoadingUI.prototype,"LoadingUI",["RES.PromiseTaskReporter"]);class Main extends eui.UILayer{createChildren(){super.createChildren(),egret.lifecycle.addLifecycleListener(e=>{}),egret.lifecycle.onPause=(()=>{egret.ticker.pause()}),egret.lifecycle.onResume=(()=>{egret.ticker.resume()});let e=new AssetAdapter;egret.registerImplementation("eui.IAssetAdapter",e),egret.registerImplementation("eui.IThemeAdapter",new ThemeAdapter),this.runGame().catch(e=>{console.log(e)})}runGame(){return __awaiter(this,void 0,void 0,function*(){yield this.loadResource(),this.createGameScene();const e=yield RES.getResAsync("description_json");this.startAnimation(e),yield platform.login();const t=yield platform.getUserInfo();console.log(t)})}loadResource(){return __awaiter(this,void 0,void 0,function*(){try{const e=new LoadingUI;this.stage.addChild(e),yield RES.loadConfig("resource/default.res.json","resource/"),yield this.loadTheme(),yield RES.loadGroup("preload",0,e),this.stage.removeChild(e)}catch(e){console.error(e)}})}loadTheme(){return new Promise((e,t)=>{new eui.Theme("resource/default.thm.json",this.stage).addEventListener(eui.UIEvent.COMPLETE,()=>{e()},this)})}createGameScene(){let e=this.createBitmapByName("bg_jpg");this.addChild(e);let t=this.stage.stageWidth,n=this.stage.stageHeight;e.width=t,e.height=n;let a=new egret.Shape;a.graphics.beginFill(0,.5),a.graphics.drawRect(0,0,t,172),a.graphics.endFill(),a.y=33,this.addChild(a);let i=this.createBitmapByName("egret_icon_png");this.addChild(i),i.x=26,i.y=33;let s=new egret.Shape;s.graphics.lineStyle(2,16777215),s.graphics.moveTo(0,0),s.graphics.lineTo(0,117),s.graphics.endFill(),s.x=172,s.y=61,this.addChild(s);let r=new egret.TextField;r.textColor=16777215,r.width=t-172,r.textAlign="center",r.text="Hello Egret",r.size=24,r.x=172,r.y=80,this.addChild(r);let o=new egret.TextField;this.addChild(o),o.alpha=0,o.width=t-172,o.textAlign=egret.HorizontalAlign.CENTER,o.size=24,o.textColor=16777215,o.x=172,o.y=135,this.textfield=o;let l=new eui.Button;l.label="Click!",l.horizontalCenter=0,l.verticalCenter=0,this.addChild(l),l.addEventListener(egret.TouchEvent.TOUCH_TAP,this.onButtonClick,this)}createBitmapByName(e){let t=new egret.Bitmap,n=RES.getRes(e);return t.texture=n,t}startAnimation(e){let t=new egret.HtmlTextParser,n=e.map(e=>t.parse(e)),a=this.textfield,i=-1,s=()=>{++i>=n.length&&(i=0);let e=n[i];a.textFlow=e;let t=egret.Tween.get(a);t.to({alpha:1},200),t.wait(2e3),t.to({alpha:0},200),t.call(s,this)};s()}onButtonClick(e){let t=new eui.Panel;t.title="Title",t.horizontalCenter=0,t.verticalCenter=0,this.addChild(t),Main.spineBitmap=new egret.Bitmap,Main.spineBitmap.texture=new egret.Texture,this.addChild(Main.spineBitmap),this.testSpineInit()}testSkin(){this.testSk=new TestDemoSkin,this.stage.addChild(this.testSk),this.testSk.testDemoBtn.addEventListener(egret.TouchEvent.TOUCH_TAP,this.onTestBtnClick,this)}onTestBtnClick(e){this.removeChild(this.testSk)}testSpineInit(){Main.stageCanvas=document.getElementById("rootDiv").getElementsByTagName("canvas")[0],Main.canvas=Main.stageCanvas.cloneNode(!0),Main.canvas.setAttribute("id","canvas"),console.log(">>>>>:::: "+Main.canvas.parentElement),document.getElementById("rootDiv").appendChild(Main.canvas),console.log("000000 "+Main.canvas),Main.context=new spine.webgl.ManagedWebGLRenderingContext(Main.canvas),console.log("111111 "+Main.context),Main.renderer=new spine.webgl.SceneRenderer(Main.canvas,Main.context),console.log("222222 "+Main.renderer),Main.time=new spine.TimeKeeper,console.log("333333 "+Main.renderer),Main.loadingScreen=new spine.webgl.LoadingScreen(new spine.webgl.SceneRenderer(Main.canvas,Main.context)),console.log("444444 "+Main.loadingScreen),Main.assetManager=new spine.webgl.AssetManager(Main.context,"../resource/assets/yuanchangye/"),Main.assetManager.loadText("yuanchangye.json"),Main.assetManager.loadTextureAtlas("yuanchangye.atlas"),console.log("******* "+Main.assetManager),setTimeout(()=>{this.loadSkeleton()},1e3)}loadSkeleton(){console.log("loadSkeleton ===>>>");let e=Main.assetManager.get("yuanchangye.atlas"),t=Main.assetManager.get("yuanchangye.json"),n=new spine.SkeletonJson(new spine.AtlasAttachmentLoader(e));n.scale=1;let a=n.readSkeletonData(t),i=new spine.AnimationStateData(a),s=new spine.Skeleton(a),r=new spine.AnimationState(i);Main.spineBody={skeleton:s,animationState:r},Main.spineBody.skeleton=s,Main.spineBody.animationState=r;let o=new spine.Vector2,l=new spine.Vector2;Main.spineBody.skeleton.updateWorldTransform(),Main.spineBody.skeleton.getBounds(o,l,[]),Main.renderer.camera.position.x=0,Main.renderer.camera.position.y=o.y+l.y/2,Main.renderer.camera.zoom=l.x>l.y?l.x/Main.canvas.width:l.y/Main.canvas.height,Main.spineBody.animationState.setAnimation(0,"animation",!0),Main.spineBody.skeleton.setSkinByName("normal");for(let e=0;e<a.skins.length;e++){let t=a.skins[e];console.log("skin name:"+t.name),e>0&&setTimeout(()=>{Main.spineBody.skeleton.setSkinByName(t.name)},3e3*e)}requestAnimationFrame(Main.renderStart)}static renderStart(){Main.context.gl.clear(Main.context.gl.COLOR_BUFFER_BIT),Main.time.update(),Main.spineBody.animationState.update(2*Main.time.delta),Main.spineBody.animationState.apply(Main.spineBody.skeleton),Main.spineBody.skeleton.updateWorldTransform(),Main.renderer.begin(),Main.renderer.drawSkeleton(Main.spineBody.skeleton,!0),Main.renderer.end(),requestAnimationFrame(Main.renderStart),Main.updateSpineBitmap()}static updateSpineBitmap(){Main.spineBitmap.texture.bitmapData?Main.spineBitmap.texture.bitmapData.source=Main.canvas:Main.spineBitmap.texture.bitmapData=new egret.BitmapData(Main.canvas)}}__reflect(Main.prototype,"Main"),window.Main=Main;class DebugPlatform{getUserInfo(){return __awaiter(this,void 0,void 0,function*(){return{nickName:"username"}})}login(){return __awaiter(this,void 0,void 0,function*(){})}}__reflect(DebugPlatform.prototype,"DebugPlatform",["Platform"]),window.platform||(window.platform=new DebugPlatform);class TestDemoSkin extends eui.Component{constructor(){super(),this.addEventListener(eui.UIEvent.COMPLETE,this.onComplete,this),this.skinName="xx.TestDemoSkin"}createChildren(){super.createChildren()}onComplete(){}}__reflect(TestDemoSkin.prototype,"TestDemoSkin");class ThemeAdapter{getTheme(e,t,n,a){if("undefined"!=typeof generateEUI)egret.callLater(()=>{t.call(a,generateEUI)},this);else if("undefined"!=typeof generateEUI2)RES.getResByUrl("resource/gameEui.json",(e,n)=>{window.JSONParseClass.setData(e),egret.callLater(()=>{t.call(a,generateEUI2)},this)},this,RES.ResourceItem.TYPE_JSON);else if("undefined"!=typeof generateJSON)if(e.indexOf(".exml")>-1){let n=e.split("/");n.pop();let i=n.join("/")+"_EUI.json";generateJSON.paths[e]?egret.callLater(()=>{t.call(a,generateJSON.paths[e])},this):RES.getResByUrl(i,n=>{window.JSONParseClass.setData(n),egret.callLater(()=>{t.call(a,generateJSON.paths[e])},this)},this,RES.ResourceItem.TYPE_JSON)}else egret.callLater(()=>{t.call(a,generateJSON)},this);else RES.addEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR,function t(i){i.resItem.url==e&&(RES.removeEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR,t,null),n.call(a))},null),RES.getResByUrl(e,function(e){t.call(a,e)},this,RES.ResourceItem.TYPE_TEXT)}}__reflect(ThemeAdapter.prototype,"ThemeAdapter",["eui.IThemeAdapter"]);